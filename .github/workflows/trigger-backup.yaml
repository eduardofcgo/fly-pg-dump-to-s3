name: Backup fly DBs

on:
  workflow_call:
    inputs:
      fly-app:
        description: The Fly app name of your db backup worker.
        required: true
        type: string
      volume-size:
        description: The volume size in GB for the volume of the backup worker.
        required: false
        type: number
      machine-size:
        description: Fly machines v2 size (https://fly.io/docs/about/pricing/#machines)
        required: false
        type: string
      region:
        description: The region to run the backup worker from.
        required: false
        type: string
      timeout:
        description: Backup GitHub action step timeout, in minutes.
        required: false
        type: number
      docker-image:
        description: The image of the backup worker. Usefull to override with specific versions.
        required: false
        type: string
      error-on-dangling-volumes:
        description: >-
          Makes the action crash if when the backup finishes there are still volumes in the app.
        required: false
        default: true
        type: boolean
      delete-al-volumes:
        description: >-
          Deletes all volumes in the backup worker after the backup has completed.
        required: false
        default: true
        type: boolean
      action-ref:
        description: >-
          The `ref` to clone the trigger backup script from. Allows to override GitHub's context
          `github.action_ref` when it does not behave properly.
        required: false
        default: ${{ github.action_ref }}
        type: string

    secrets:
      FLY_API_TOKEN:
        required: true

jobs:
  backup_db:
    name: Perform database backups
    runs-on: ubuntu-latest
    concurrency: ${{ github.workflow }}-fly-db-backup
    timeout-minutes: ${{ inputs.timeout }}
    steps:
      - uses: actions/checkout@v3
        with:
          repository: significa/fly-pg-dump-to-s3
          path: ./fly-pg-dump-to-s3
          ref: ${{ inputs.action-ref }}

      - uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Run backups
        run: ./fly-pg-dump-to-s3/trigger-backup.sh
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FLY_APP: ${{ inputs.fly-app }}
          FLY_REGION: ${{ inputs.region }}
          FLY_MACHINE_SIZE: ${{ inputs.machine-size }}
          FLY_VOLUME_SIZE: ${{ inputs.volume-size }}
          DOCKER_IMAGE: ${{ inputs.docker-image }}
          ERROR_ON_DANGLING_VOLUMES: ${{ inputs.error-on-dangling-volumes }}
          DELETE_ALL_VOLUMES: ${{ inputs.delete-al-volumes }}
